- #  Dubsar Dictionary Project
- #  Copyright (C) 2010-15 Jimmy Dee
- #
- #  This program is free software; you can redistribute it and/or
- #  modify it under the terms of the GNU General Public License
- #  as published by the Free Software Foundation; either version 2
- #  of the License, or (at your option) any later version.
- #
- #  This program is distributed in the hope that it will be useful,
- #  but WITHOUT ANY WARRANTY; without even the implied warranty of
- #  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- #  GNU General Public License for more details.
- #
- #  You should have received a copy of the GNU General Public License
- #  along with this program; if not, write to the Free Software
- #  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

- if defined?(with_info_button) and with_info_button
  - unless defined?(target)
    - target = synset
  = render partial: 'info_button', locals: { target: target }

%span
  &= synset.gloss
%br/
%span{:title => 'lexical file name, a broad category associated with this synset'}
  %em
    &= "<#{synset.lexname}>"
- synset.senses.each do |sense|
  - unless sense.marker.blank?
    - classes = "#{sense.unique_name} lexical"
    %span{:class => classes, title: 'positional adjective marker'}
      &nbsp;
      (#{sense.marker})
- unless synset.freq_cnt.zero?
  &nbsp;
  %span.semantic{:title => 'frequency count of this synset in a reference text'}
    = "freq. cnt.: #{synset.freq_cnt.to_s :delimiter => ','}"
  - synset.senses.each do |sense|
    - unless sense.freq_cnt <= 0
      - classes = "#{sense.unique_name} lexical"
      %span{:class => classes, title: 'frequency count of this word sense in a reference text'}
        = "freq. cnt.: #{sense.freq_cnt.to_s :delimiter => ','}"
%br/
%br/
- synset.senses.sort_by{|s|s.word.name}.each do |s|
  - if (defined?(with_info_button) and with_info_button)
    %span.synonym
      &= s.word.name
  - else
    %table.word-links
      %tbody
        %tr
          %td
            / Selection link
            = link_to s.word.name, "##{s.unique_name}", :class => 'synonym-link', 'data-synset-path' => path_to_synset_with_fragment(s)
          %td
            / Navigation button
            = render partial: 'info_button', locals: { target: s.word }
