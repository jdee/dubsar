%h2 Dubsar

%p
  This is the Dubsar website. Mobile apps are available for free:

%ul
  %li
    = link_to 'App Store', 'https://itunes.apple.com/us/app/dubsar/id453868483?mt=8'
  %li
    = link_to 'Google Play', 'https://play.google.com/store/apps/details?id=com.dubsar_dictionary.Dubsar'
  %li
    = link_to 'Amazon App Store', 'http://www.amazon.com/gp/mas/dl/android?p=com.dubsar_dictionary.Dubsar&ref=mas_pm_app_name'
  %li
    = link_to 'APK download (591 kB)', apk_link

%p
  I can&apos;t say Dubsar is always the finest example of my coding abilities, but the
  source is GPL and available in GitHub.

%p
  Version 2.0 of the iOS app was recently rewritten in Swift and released to the App
  Store.

%ul
  %li
    = link_to 'Rails app', 'https://github.com/jdee/dubsar'
  %li
    = link_to 'iOS app', 'https://github.com/jdee/dubsar_ios'
  %li
    = link_to 'Android app', 'https://github.com/jdee/dubsar_android'

%h2 cpyn

%p
  = link_to 'https://cpyn.mobi', 'https://cpyn.mobi'

= image_tag 'cpyn_numinous_eye.png', size: '280x497', alt: 'cpyn with Numinous Eye', style: 'display: block; margin-left: 20pt;'

%p
  The cpyn audio player was inspired by the audio player demo for the iOS Knob Control
  (see below). It uses the OpenGL ES figure rendering system from Laertes; the 3-D content
  was built with the Laertes figure editor. The app uses Core Audio on iOS to provide
  a 10-band graphic equalizer with 22 presets, gapless playback, cross fading, reversible
  playback, variable speed playback, record scratching, stereo panning, frequency analysis
  and a wave form display.

%p
  Expect to see cpyn in the App Store October 2014.

%h2 Laertes

= image_tag 'laertes.png', size: '284x187'
= image_tag 'laertes-combat.png', size: '284x187'

%p
  Laertes is a first-person fantasy role-playing game for iOS using OpenGL ES 2.0. I built
  a Rails/jQuery UI/Raphael.js app to make the content for the app, which is mostly SQLite.
  This is a work in progress and will likely take some time to finish. Screenshots are
  available
  =link_to 'here.', 'http://redmenace.imgur.com/Laertes'
  There will doubtless be an Android version of Laertes some day as well, but not yet.

%h2 iOS Knob Control

%p
  = link_to 'https://github.com/jdee/ios-knob-control' do
    %em https://github.com/jdee/ios-knob-control

%p
  Just as the space program produced miracles like the ballpoint pen,
  I have spun out some of the custom components I built for Laertes. The first is a
  customizable knob control for iOS that can be configured to respond to four different
  gestures and operates in continuous, discrete and rotary dial modes. It can use custom
  images or generate customizable default images for you. It&apos;s distributed as a
  single .h, .m file pair you drop into a project. It includes full, separate sample
  apps in Objective-C and Swift, not to mention some reusable images from a graphic
  designer.

= image_tag 'ikc-spin.png', alt: 'spin', size: "160x284"
= image_tag 'ikc-continuous.png', alt: 'spin', size: "160x284"
= image_tag 'ikc-rotary-dial.png', alt: 'spin', size: "160x284"
= image_tag 'ikc-months.png', alt: 'spin', size: "160x284"

%h2 Violation for iOS

%p
  = link_to 'https://github.com/jdee/violation' do
    %em https://github.com/jdee/violation

%p
  The release of the iOS knob control went well, so I wanted to release more of the
  custom components from Laertes. Violation is a framework for iOS that currently
  comprises a custom gesture recognizer, a custom control that uses it and a highly
  customizable button. Eventually,
  the iOS Knob Control will join Violation, but that will wait until a time when both are
  not simultaneously being prepared for a release. Like the iOS Knob Control, Violation
  includes full, separate sample apps in Swift and Objective-C.
