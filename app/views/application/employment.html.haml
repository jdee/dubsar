%h3
  Urban Airship, Portland OR &middot; 2011-2013
%p.employment
  Built a high-throughput RPC mechanism alone, from scratch in C++ to satisfy more than
  400,000 requests per second and a SWIG-based Python module on top of it to handle
  more than 200,000 asynchronous requests per second from Python.
%p.employment
  Built a push-notification system service for the Tizen operating system in partnership
  with Intel, based on Urban Airship&apos;s Helium product. This was with a small team,
  but I did most of the work on this project myself. This involved building a system
  daemon with an open plug-in architecture that used D-Bus to send notifications securely
  to client applications. This also included a Chromium web runtime plug-in using the
  FireBreath C++ framework in order to receive notifications in JavaScript. I did a lot
  of similar, related work there to build the same sort of service on Windows 7.
%p.employment
  Did considerable maintenance and development on Urban Airship&apos;s iOS and Android
  SDKS as well over the course of about a year.
      
%h3
  Collaborative Software Initiative, Portland OR &middot; 2009-2011
%p.employment
  In collaboration with Merrill Lynch, built MDAL, the Market Data Abstraction Layer,
  as a generic C++ library for accessing disparate market data systems (RMDS, Bloomberg).
%p.employment
  Also built a capture/replay system for raw UDP multicast data streams. This included
  a lot of low-level command-line tools, but also a fair bit of Ruby using Rails and
  Sinatra.
%p.employment
  Later, contributed to CSI&apos;s flagship project, TriSano, a Rails 2.3.5 public
  health application used by health departments like Utah and the Southern Nevada Health
  District.

%h3
  Merrill Lynch, New York NY &middot; 2006-2007
%p.employment
  Responsible for development and maintenance of real-time market-data infrastructure,
  including a flexible streaming record/playback suite and a distributed cache component
  for heterogeneous data sets (data sources included RMDS and TIBCO RV). All work Red Hat
  Linux, C++ and Java. Some work with ACE C++ library.

%h3
  Skyler Technology, Walnut Creek CA &middot; 2006-2007
%p.employment
  Developed high-performance loaders for Skyler C3 in-memory database, particularly a
  loader for the NYSE OpenBook level 2 data feed. Made considerable use of ACE C++ library.
  All work in C++, primarily on Red Hat Linux.
    
%br/
%p
  For complete employment history, see my
  = link_to 'public LinkedIn profile.', 'http://www.linkedin.com/in/jgvd3', target: '_blank'
