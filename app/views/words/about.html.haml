- #  Dubsar Dictionary Project
- #  Copyright (C) 2010 Jimmy Dee
- #
- #  This program is free software; you can redistribute it and/or
- #  modify it under the terms of the GNU General Public License
- #  as published by the Free Software Foundation; either version 2
- #  of the License, or (at your option) any later version.
- #
- #  This program is distributed in the hope that it will be useful,
- #  but WITHOUT ANY WARRANTY; without even the implied warranty of
- #  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- #  GNU General Public License for more details.
- #
- #  You should have received a copy of the GNU General Public License
- #  along with this program; if not, write to the Free Software
- #  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
- content_for :title do
  About Dubsar

- content_for :description do
  %meta{:name => 'Description', :content => 'Read about the open-source Dubsar Dictionary Project.'}
  %meta{:name => 'Keywords', :content => 'Dubsar, Dubsar Project, WordNet, thesaurus, dictionary, free dictionary, online dictionary, Ruby on Rails, jQuery, jQuery UI, PostgreSQL, QUnit, open-source, GPL, GitHub, English'}
  %link{:rel => 'canonical', :href => 'http://dubsar-dictionary.com/about'}
  !=thumbnail_link_tags

#about
  %h4 Dubsar
  Dubsar was conceived as a simple web-based dictionary application
  using
  %ul
    %li
      %a{:href => 'http://rubyonrails.org', :title => 'Ruby on RailsÂ®', :class => 'undecorated'}
        Ruby on Rails&reg;
      3.0,
    %li
      =link_to 'PostgreSQL', 'http://postgresql.org', :title => 'PostgreSQL', :class => 'undecorated'
      8.4,
    %li
      =link_to 'jQuery', 'http://jquery.com', :title => 'jQuery', :class => 'undecorated'
      1.6 and
    %li
      =link_to 'jQuery UI', 'http://jqueryui.com', :title => 'jQuery UI', :class => 'undecorated'
      1.8.
  %p
    The ready availability of the
    %a{:href => 'http://wordnet.princeton.edu', :class => 'undecorated'} WordNet&reg;
    3.0 data set made it the perfect candidate for inclusion in Dubsar.
    Dubsar is a work in progress.  Over time, it may grow to include
    other data sources.

  %p
    Dubsar is above all a technology project, a place to prove and
    explore open-source application software like the jQuery family.
    While the features of the site will certainly
    evolve in coming releases, it will also grow to include more
    technical content like the hosted
    =link_to 'QUnit test suite.', qunit_path, :title => 'QUnit test suite', :class => 'undecorated'

  %p
    Visit the
    = link_to 'Dubsar Mobile Edition', m_path, :title => 'Dubsar Mobile Edition'
    on your smart phone, tablet or other mobile device.

  %p
    =link_to 'Link to Dubsar', link_path, :title => 'Link to Dubsar'
    from your website.

  %h4
    %a{:href => 'http://wordnet.princeton.edu', :class => 'undecorated'} WordNet&reg;
  %p
    The
    %a{:href => 'http://wordnet.princeton.edu', :class => 'undecorated'} WordNet&reg;
    3.0 data set includes only adjectives, adverbs, nouns and verbs.  It
    does not include conjunctions, interjections, prepositions or
    pronouns.  It includes many proper nouns and technical terms.

  %p
    The WordNet&reg; content governs the Dubsar feature set by limiting
    what can be shown.  A user might expect a dictionary to include
    etymology and pronunciation information, for example, maybe also
    illustrations for some entries.  And of course, she&apos;ll expect to
    find common auxiliary verbs like
    %em should
    and all parts of speech.

  %p
    By contrast, WordNet&reg; is aimed at automated text processing and
    identification of lexical and semantic textual information via
    salient terms (represented by the four major parts of speech
    WordNet&reg; comprises).  As a result, the content makes
    WordNet&reg; (and Dubsar) at times more closely resemble a
    thesaurus than a dictionary.

  %h4 Inflections

  %p
    Dubsar provides one important class of information not present in
    WordNet&reg;.  While WordNet&reg; does provide exceptional
    inflections for irregular words, it does not offer much help with
    regular inflections.  WordNet&reg; makes use of the Morphy
    algorithm to make a morphological determination of the head term
    associated with an inflected form.  For example, the head term for
    %em queried
    is the verb
    %em query,
    the former being the past tense and past participle of the latter.
    WordNet&reg; applications like the
    %a.undecorated{:href => 'http://wordnetweb.princeton.edu/perl/webwn'}
      WordNet&reg; online interface
    will match inflected forms when searching
    for a word.  For example, if you search for
    %em happening,
    you'll find the verb
    %em happen.
    But if you search for the misspelled
    %em happenning,
    you'll find the same verb. The Morphy rules are overly broad. When
    searching for words, this can have the effect at times of
    correcting one's spelling.  It helps the user find the intended
    dictionary entry.  But it is not possible for applications using
    Morphy to display all inflections associated with a word, since
    many of them (like
    %em happenning
    above) are invalid.

  %p
    Dubsar, on the other hand, does just this and displays all known
    inflections for each word.  It can do this because it does not use
    rules to determine inflections when looking up words.  Dubsar
    includes a database table containing every inflected form of every
    word it knows.  When a user performs a search without wild cards,
    the search is matched against all known inflected word forms.
    However, only exact matches are performed.  So if you search Dubsar
    for
    %em happening,
    you'll find
    %em happen.
    But you'll get no results for
    %em happenning.

  %p
    The database currently contains
    =model_count 'inflection'
    inflection entries for
    =model_count 'word'
    words.  Note that each word, uninflected, is listed in the
    Inflections table.  For example, the verb
    %em be
    has eight inflected forms:

    %ul
      %li am
      %li are
      %li be
      %li been
      %li being
      %li is
      %li was
      %li were

    Dubsar generates
    =(part_of_speech_count(:inflection, 'verb')-part_of_speech_count(:word, 'verb')-1_967).to_s :delimiter => ','
    verb inflections and
    =(part_of_speech_count(:inflection, 'noun')-part_of_speech_count(:word, 'noun')-1_455).to_s :delimiter => ','
    noun inflections not found in WordNet&reg;. Most of the latter are
    from the ActiveSupport Inflector.

  %p
    See the
    =link_to 'Dubsar wiki on GitHub', 'https://github.com/jdee/dubsar/wiki/Inflections', :title => 'Dubsar wiki', :class => 'undecorated'
    for more details on Dubar&apos;s inflection handling.

