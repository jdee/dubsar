- #  Dubsar Dictionary Project
- #  Copyright (C) 2010 Jimmy Dee
- #
- #  This program is free software; you can redistribute it and/or
- #  modify it under the terms of the GNU General Public License
- #  as published by the Free Software Foundation; either version 2
- #  of the License, or (at your option) any later version.
- #
- #  This program is distributed in the hope that it will be useful,
- #  but WITHOUT ANY WARRANTY; without even the implied warranty of
- #  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- #  GNU General Public License for more details.
- #
- #  You should have received a copy of the GNU General Public License
- #  along with this program; if not, write to the Free Software
- #  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
.ui-widget-content
  .line.ui-state-active.ui-corner-top
    %span.ui-icon.ui-icon-star
    %span
      &nbsp;
      %em{:title => 'lexical file name, a broad category associated with this word sense'}
        &="<#{sense.synset.lexname}>"
      &nbsp;
      - if sense.marker
        != marker_spanner sense.marker
        &nbsp;
      - if sense.freq_cnt > 0
        %span{:title => 'frequency count of this word sense in a reference text'}
          &= "freq. cnt.: #{sense.freq_cnt.to_s :delimiter => ','}"
        &nbsp;
  .ui-state-default.ui-corner-bottom
    = link_to h(sense.word.name+":"), sense.word, :class => 'search-link'
    = link_to h(sense.synset.gloss), sense.synset, :class => 'search-link'
    - unless sense.synset.senses_except(sense.word).empty?
      %hr/
      - sense.synset.senses_except(sense.word).each do |s|
        = link_to h(s.word.name), s, :class => 'search-link'
    - unless sense.frames.empty?
      %hr/
      %strong{:title => 'generic sentence frames for this verb sense'}
        verb frames
      %table
        %tbody
          - sense.frames.each do |frame|
            %tr
              %td
                != frame_spanner frame
    - unless sense.synset.samples.blank?
      %hr/
      %strong{:title => 'sample sentences using this word sense (and synonymous ones)'}
        sample sentences
      %table
        %tbody
          - sense.synset.samples.each do |sample|
            - s = sample.strip
            - unless s.blank?
              %tr
                %td
                  &= s
    - unless sense.pointers.blank?
      %hr/
      %strong{:title => 'links to related words of different types'} pointers
      %table
        %tbody
          - sense.pointers.group_by(&:ptype).each do |ptype, ptrs|
            %tr
              %td.pointer-type{:title => Pointer.help_text(ptype)}
                %em
                  &= ptype
              %td
                - ptrs.each do |ptr|
                  = target_link ptr.target
